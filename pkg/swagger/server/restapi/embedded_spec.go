// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition",
    "title": "kutego-api",
    "version": "0.1.0"
  },
  "paths": {
    "/gopher/random": {
      "get": {
        "description": "Return a random Gopher Image",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Size for your Gopher ('x-small','small','medium')",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a random gopher.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "there is something wrong in the path."
          }
        }
      }
    },
    "/gopher/{name}": {
      "get": {
        "description": "Return the Gopher Image",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "The name of the Gopher to display.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Size for your Gopher",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the gopher.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid characters in \"name\" were provided."
          }
        }
      }
    },
    "/gophers": {
      "get": {
        "description": "List all the gopher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Gopher name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Gophers list.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gopher"
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Gopher": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "my-gopher"
        },
        "path": {
          "type": "string",
          "example": "my-gopher.png"
        },
        "url": {
          "type": "string",
          "example": "https://raw.githubusercontent.com/scraly/gophers/main/arrow-gopher.png"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition",
    "title": "kutego-api",
    "version": "0.1.0"
  },
  "paths": {
    "/gopher/random": {
      "get": {
        "description": "Return a random Gopher Image",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Size for your Gopher ('x-small','small','medium')",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a random gopher.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "there is something wrong in the path."
          }
        }
      }
    },
    "/gopher/{name}": {
      "get": {
        "description": "Return the Gopher Image",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "The name of the Gopher to display.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Size for your Gopher",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the gopher.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid characters in \"name\" were provided."
          }
        }
      }
    },
    "/gophers": {
      "get": {
        "description": "List all the gopher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Gopher name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Gophers list.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gopher"
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Gopher": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "my-gopher"
        },
        "path": {
          "type": "string",
          "example": "my-gopher.png"
        },
        "url": {
          "type": "string",
          "example": "https://raw.githubusercontent.com/scraly/gophers/main/arrow-gopher.png"
        }
      }
    }
  }
}`))
}
