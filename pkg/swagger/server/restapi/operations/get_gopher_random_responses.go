// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetGopherRandomOKCode is the HTTP code returned for type GetGopherRandomOK
const GetGopherRandomOKCode int = 200

/*GetGopherRandomOK Returns a random gopher.

swagger:response getGopherRandomOK
*/
type GetGopherRandomOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetGopherRandomOK creates GetGopherRandomOK with default headers values
func NewGetGopherRandomOK() *GetGopherRandomOK {

	return &GetGopherRandomOK{}
}

// WithPayload adds the payload to the get gopher random o k response
func (o *GetGopherRandomOK) WithPayload(payload io.ReadCloser) *GetGopherRandomOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get gopher random o k response
func (o *GetGopherRandomOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGopherRandomOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetGopherRandomBadRequestCode is the HTTP code returned for type GetGopherRandomBadRequest
const GetGopherRandomBadRequestCode int = 400

/*GetGopherRandomBadRequest there is something wrong in the path.

swagger:response getGopherRandomBadRequest
*/
type GetGopherRandomBadRequest struct {
}

// NewGetGopherRandomBadRequest creates GetGopherRandomBadRequest with default headers values
func NewGetGopherRandomBadRequest() *GetGopherRandomBadRequest {

	return &GetGopherRandomBadRequest{}
}

// WriteResponse to the client
func (o *GetGopherRandomBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
